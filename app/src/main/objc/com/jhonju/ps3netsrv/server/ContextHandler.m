//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./app/src/main/java/com/jhonju/ps3netsrv/server/ContextHandler.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/jhonju/ps3netsrv/server/Context.h"
#include "com/jhonju/ps3netsrv/server/ContextHandler.h"
#include "com/jhonju/ps3netsrv/server/commands/CreateFileCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/DeleteFileCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/GetDirSizeCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/ICommand.h"
#include "com/jhonju/ps3netsrv/server/commands/MakeDirCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/OpenDirCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/OpenFileCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/ReadCD2048Command.h"
#include "com/jhonju/ps3netsrv/server/commands/ReadDirCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/ReadDirEntryCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/ReadDirEntryCommandV2.h"
#include "com/jhonju/ps3netsrv/server/commands/ReadFileCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/ReadFileCriticalCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/StatFileCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/WriteFileCommand.h"
#include "com/jhonju/ps3netsrv/server/enums/ENetIsoCommand.h"
#include "com/jhonju/ps3netsrv/server/exceptions/PS3NetSrvException.h"
#include "com/jhonju/ps3netsrv/server/utils/Utils.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Thread.h"
#include "java/lang/Throwable.h"
#include "java/nio/ByteBuffer.h"
#include "java/util/Objects.h"

#if __has_feature(objc_arc)
#error "com/jhonju/ps3netsrv/server/ContextHandler must not be compiled with ARC (-fobjc-arc)"
#endif

@interface ComJhonjuPs3netsrvServerContextHandler () {
 @public
  jint maxConnections_;
  ComJhonjuPs3netsrvServerContext *context_;
}

- (void)handleContextWithComJhonjuPs3netsrvServerContext:(ComJhonjuPs3netsrvServerContext *)ctx
                                   withJavaNioByteBuffer:(JavaNioByteBuffer *)buffer;

@end

J2OBJC_FIELD_SETTER(ComJhonjuPs3netsrvServerContextHandler, context_, ComJhonjuPs3netsrvServerContext *)

inline jbyte ComJhonjuPs3netsrvServerContextHandler_get_IDX_OP_CODE(void);
#define ComJhonjuPs3netsrvServerContextHandler_IDX_OP_CODE 0
J2OBJC_STATIC_FIELD_CONSTANT(ComJhonjuPs3netsrvServerContextHandler, IDX_OP_CODE, jbyte)

inline jbyte ComJhonjuPs3netsrvServerContextHandler_get_IDX_CMD_DATA_1(void);
#define ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_1 2
J2OBJC_STATIC_FIELD_CONSTANT(ComJhonjuPs3netsrvServerContextHandler, IDX_CMD_DATA_1, jbyte)

inline jbyte ComJhonjuPs3netsrvServerContextHandler_get_IDX_CMD_DATA_2(void);
#define ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_2 4
J2OBJC_STATIC_FIELD_CONSTANT(ComJhonjuPs3netsrvServerContextHandler, IDX_CMD_DATA_2, jbyte)

inline jbyte ComJhonjuPs3netsrvServerContextHandler_get_IDX_CMD_DATA_3(void);
#define ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_3 8
J2OBJC_STATIC_FIELD_CONSTANT(ComJhonjuPs3netsrvServerContextHandler, IDX_CMD_DATA_3, jbyte)

inline jbyte ComJhonjuPs3netsrvServerContextHandler_get_CMD_DATA_SIZE(void);
#define ComJhonjuPs3netsrvServerContextHandler_CMD_DATA_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(ComJhonjuPs3netsrvServerContextHandler, CMD_DATA_SIZE, jbyte)

inline jint ComJhonjuPs3netsrvServerContextHandler_get_simultaneousConnections(void);
inline jint ComJhonjuPs3netsrvServerContextHandler_set_simultaneousConnections(jint value);
static volatile_jint ComJhonjuPs3netsrvServerContextHandler_simultaneousConnections;
J2OBJC_STATIC_FIELD_PRIMITIVE_VOLATILE(ComJhonjuPs3netsrvServerContextHandler, simultaneousConnections, jint)

__attribute__((unused)) static void ComJhonjuPs3netsrvServerContextHandler_handleContextWithComJhonjuPs3netsrvServerContext_withJavaNioByteBuffer_(ComJhonjuPs3netsrvServerContextHandler *self, ComJhonjuPs3netsrvServerContext *ctx, JavaNioByteBuffer *buffer);

@implementation ComJhonjuPs3netsrvServerContextHandler

- (void)incrementSimultaneousConnections {
  @synchronized(self) {
    ComJhonjuPs3netsrvServerContextHandler_simultaneousConnections++;
  }
}

- (void)decrementSimultaneousConnections {
  @synchronized(self) {
    ComJhonjuPs3netsrvServerContextHandler_simultaneousConnections--;
  }
}

- (instancetype)initWithComJhonjuPs3netsrvServerContext:(ComJhonjuPs3netsrvServerContext *)context
                                                withInt:(jint)maxConnections
            withJavaLangThread_UncaughtExceptionHandler:(id<JavaLangThread_UncaughtExceptionHandler>)exceptionHandler {
  ComJhonjuPs3netsrvServerContextHandler_initWithComJhonjuPs3netsrvServerContext_withInt_withJavaLangThread_UncaughtExceptionHandler_(self, context, maxConnections, exceptionHandler);
  return self;
}

- (void)run {
  [self incrementSimultaneousConnections];
  @try {
    ComJhonjuPs3netsrvServerContext *ctx = context_;
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      if (maxConnections_ > 0 && JreLoadVolatileInt(&ComJhonjuPs3netsrvServerContextHandler_simultaneousConnections) > maxConnections_) {
        [((id<JavaLangThread_UncaughtExceptionHandler>) nil_chk([self getUncaughtExceptionHandler])) uncaughtExceptionWithJavaLangThread:self withJavaLangThrowable:create_ComJhonjuPs3netsrvServerExceptionsPS3NetSrvException_initWithNSString_(@"Connection limit is reached")];
        return;
      }
      while ([((ComJhonjuPs3netsrvServerContext *) nil_chk(ctx)) isSocketConnected]) {
        @try {
          JavaNioByteBuffer *packet = ComJhonjuPs3netsrvServerUtilsUtils_readCommandDataWithJavaIoInputStream_withInt_([ctx getInputStream], ComJhonjuPs3netsrvServerContextHandler_CMD_DATA_SIZE);
          if (packet == nil) break;
          if (ComJhonjuPs3netsrvServerUtilsUtils_isByteArrayEmptyWithByteArray_([packet array])) continue;
          ComJhonjuPs3netsrvServerContextHandler_handleContextWithComJhonjuPs3netsrvServerContext_withJavaNioByteBuffer_(self, ctx, packet);
        }
        @catch (ComJhonjuPs3netsrvServerExceptionsPS3NetSrvException *e) {
          [((id<JavaLangThread_UncaughtExceptionHandler>) nil_chk([self getUncaughtExceptionHandler])) uncaughtExceptionWithJavaLangThread:self withJavaLangThrowable:e];
        }
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (ctx != nil) {
        if (__primaryException1 != nil) {
          @try {
            [ctx close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [ctx close];
        }
      }
    }
  }
  @catch (JavaIoIOException *e) {
    [((id<JavaLangThread_UncaughtExceptionHandler>) nil_chk(JavaUtilObjects_requireNonNullWithId_([self getUncaughtExceptionHandler]))) uncaughtExceptionWithJavaLangThread:self withJavaLangThrowable:e];
  }
  @finally {
    [self decrementSimultaneousConnections];
  }
}

- (void)handleContextWithComJhonjuPs3netsrvServerContext:(ComJhonjuPs3netsrvServerContext *)ctx
                                   withJavaNioByteBuffer:(JavaNioByteBuffer *)buffer {
  ComJhonjuPs3netsrvServerContextHandler_handleContextWithComJhonjuPs3netsrvServerContext_withJavaNioByteBuffer_(self, ctx, buffer);
}

- (void)dealloc {
  RELEASE_(context_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(incrementSimultaneousConnections);
  methods[1].selector = @selector(decrementSimultaneousConnections);
  methods[2].selector = @selector(initWithComJhonjuPs3netsrvServerContext:withInt:withJavaLangThread_UncaughtExceptionHandler:);
  methods[3].selector = @selector(run);
  methods[4].selector = @selector(handleContextWithComJhonjuPs3netsrvServerContext:withJavaNioByteBuffer:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "IDX_OP_CODE", "B", .constantValue.asChar = ComJhonjuPs3netsrvServerContextHandler_IDX_OP_CODE, 0x1a, -1, -1, -1, -1 },
    { "IDX_CMD_DATA_1", "B", .constantValue.asChar = ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_1, 0x1a, -1, -1, -1, -1 },
    { "IDX_CMD_DATA_2", "B", .constantValue.asChar = ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_2, 0x1a, -1, -1, -1, -1 },
    { "IDX_CMD_DATA_3", "B", .constantValue.asChar = ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_3, 0x1a, -1, -1, -1, -1 },
    { "CMD_DATA_SIZE", "B", .constantValue.asChar = ComJhonjuPs3netsrvServerContextHandler_CMD_DATA_SIZE, 0x1a, -1, -1, -1, -1 },
    { "maxConnections_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "context_", "LComJhonjuPs3netsrvServerContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "simultaneousConnections", "I", .constantValue.asLong = 0, 0x4a, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "LComJhonjuPs3netsrvServerContext;ILJavaLangThread_UncaughtExceptionHandler;", "handleContext", "LComJhonjuPs3netsrvServerContext;LJavaNioByteBuffer;", "LComJhonjuPs3netsrvServerExceptionsPS3NetSrvException;LJavaIoIOException;", &ComJhonjuPs3netsrvServerContextHandler_simultaneousConnections };
  static const J2ObjcClassInfo _ComJhonjuPs3netsrvServerContextHandler = { "ContextHandler", "com.jhonju.ps3netsrv.server", ptrTable, methods, fields, 7, 0x1, 5, 8, -1, -1, -1, -1, -1 };
  return &_ComJhonjuPs3netsrvServerContextHandler;
}

@end

void ComJhonjuPs3netsrvServerContextHandler_initWithComJhonjuPs3netsrvServerContext_withInt_withJavaLangThread_UncaughtExceptionHandler_(ComJhonjuPs3netsrvServerContextHandler *self, ComJhonjuPs3netsrvServerContext *context, jint maxConnections, id<JavaLangThread_UncaughtExceptionHandler> exceptionHandler) {
  JavaLangThread_init(self);
  [self setUncaughtExceptionHandlerWithJavaLangThread_UncaughtExceptionHandler:exceptionHandler];
  JreStrongAssign(&self->context_, context);
  self->maxConnections_ = maxConnections;
}

ComJhonjuPs3netsrvServerContextHandler *new_ComJhonjuPs3netsrvServerContextHandler_initWithComJhonjuPs3netsrvServerContext_withInt_withJavaLangThread_UncaughtExceptionHandler_(ComJhonjuPs3netsrvServerContext *context, jint maxConnections, id<JavaLangThread_UncaughtExceptionHandler> exceptionHandler) {
  J2OBJC_NEW_IMPL(ComJhonjuPs3netsrvServerContextHandler, initWithComJhonjuPs3netsrvServerContext_withInt_withJavaLangThread_UncaughtExceptionHandler_, context, maxConnections, exceptionHandler)
}

ComJhonjuPs3netsrvServerContextHandler *create_ComJhonjuPs3netsrvServerContextHandler_initWithComJhonjuPs3netsrvServerContext_withInt_withJavaLangThread_UncaughtExceptionHandler_(ComJhonjuPs3netsrvServerContext *context, jint maxConnections, id<JavaLangThread_UncaughtExceptionHandler> exceptionHandler) {
  J2OBJC_CREATE_IMPL(ComJhonjuPs3netsrvServerContextHandler, initWithComJhonjuPs3netsrvServerContext_withInt_withJavaLangThread_UncaughtExceptionHandler_, context, maxConnections, exceptionHandler)
}

void ComJhonjuPs3netsrvServerContextHandler_handleContextWithComJhonjuPs3netsrvServerContext_withJavaNioByteBuffer_(ComJhonjuPs3netsrvServerContextHandler *self, ComJhonjuPs3netsrvServerContext *ctx, JavaNioByteBuffer *buffer) {
  id<ComJhonjuPs3netsrvServerCommandsICommand> command;
  ComJhonjuPs3netsrvServerEnumsENetIsoCommand *opCode = ComJhonjuPs3netsrvServerEnumsENetIsoCommand_valueOfWithInt_([((JavaNioByteBuffer *) nil_chk(buffer)) getShortWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_OP_CODE]);
  if (opCode == nil) {
    @throw create_ComJhonjuPs3netsrvServerExceptionsPS3NetSrvException_initWithNSString_(JreStrcat("$S", @"invalid opCode: ", [buffer getShortWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_OP_CODE]));
  }
  switch ([opCode ordinal]) {
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_OPEN_DIR:
    command = create_ComJhonjuPs3netsrvServerCommandsOpenDirCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ctx, [buffer getShortWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_1]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_READ_DIR:
    command = create_ComJhonjuPs3netsrvServerCommandsReadDirCommand_initWithComJhonjuPs3netsrvServerContext_(ctx);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_STAT_FILE:
    command = create_ComJhonjuPs3netsrvServerCommandsStatFileCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ctx, [buffer getShortWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_1]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_OPEN_FILE:
    command = create_ComJhonjuPs3netsrvServerCommandsOpenFileCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ctx, [buffer getShortWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_1]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_READ_FILE:
    command = create_ComJhonjuPs3netsrvServerCommandsReadFileCommand_initWithComJhonjuPs3netsrvServerContext_withInt_withLong_(ctx, [buffer getIntWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_2], [buffer getLongWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_3]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_READ_FILE_CRITICAL:
    command = create_ComJhonjuPs3netsrvServerCommandsReadFileCriticalCommand_initWithComJhonjuPs3netsrvServerContext_withInt_withLong_(ctx, [buffer getIntWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_2], [buffer getLongWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_3]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_READ_CD_2048_CRITICAL:
    command = create_ComJhonjuPs3netsrvServerCommandsReadCD2048Command_initWithComJhonjuPs3netsrvServerContext_withInt_withInt_(ctx, [buffer getIntWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_2], [buffer getIntWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_3]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_CREATE_FILE:
    command = create_ComJhonjuPs3netsrvServerCommandsCreateFileCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ctx, [buffer getShortWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_1]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_WRITE_FILE:
    command = create_ComJhonjuPs3netsrvServerCommandsWriteFileCommand_initWithComJhonjuPs3netsrvServerContext_withInt_(ctx, [buffer getIntWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_2]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_MKDIR:
    command = create_ComJhonjuPs3netsrvServerCommandsMakeDirCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ctx, [buffer getShortWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_1]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_RMDIR:
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_DELETE_FILE:
    command = create_ComJhonjuPs3netsrvServerCommandsDeleteFileCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ctx, [buffer getShortWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_1]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_GET_DIR_SIZE:
    command = create_ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ctx, [buffer getShortWithInt:ComJhonjuPs3netsrvServerContextHandler_IDX_CMD_DATA_1]);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_READ_DIR_ENTRY:
    command = create_ComJhonjuPs3netsrvServerCommandsReadDirEntryCommand_initWithComJhonjuPs3netsrvServerContext_(ctx);
    break;
    case ComJhonjuPs3netsrvServerEnumsENetIsoCommand_Enum_NETISO_CMD_READ_DIR_ENTRY_V2:
    command = create_ComJhonjuPs3netsrvServerCommandsReadDirEntryCommandV2_initWithComJhonjuPs3netsrvServerContext_(ctx);
    break;
    default:
    @throw create_ComJhonjuPs3netsrvServerExceptionsPS3NetSrvException_initWithNSString_(JreStrcat("$$", @"OpCode not implemented: ", [opCode name]));
  }
  [((id<ComJhonjuPs3netsrvServerCommandsICommand>) nil_chk(command)) executeTask];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComJhonjuPs3netsrvServerContextHandler)
