//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./app/src/main/java/com/jhonju/ps3netsrv/server/commands/GetDirSizeCommand.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/jhonju/ps3netsrv/server/Context.h"
#include "com/jhonju/ps3netsrv/server/commands/AbstractCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/FileCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/GetDirSizeCommand.h"
#include "com/jhonju/ps3netsrv/server/utils/Utils.h"
#include "java/io/File.h"

#if __has_feature(objc_arc)
#error "com/jhonju/ps3netsrv/server/commands/GetDirSizeCommand must not be compiled with ARC (-fobjc-arc)"
#endif

@interface ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand ()

+ (jlong)calculateFileSizeWithJavaIoFile:(JavaIoFile *)file;

@end

__attribute__((unused)) static jlong ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_calculateFileSizeWithJavaIoFile_(JavaIoFile *file);

@implementation ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand

- (instancetype)initWithComJhonjuPs3netsrvServerContext:(ComJhonjuPs3netsrvServerContext *)ctx
                                              withShort:(jshort)filePathLength {
  ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(self, ctx, filePathLength);
  return self;
}

- (void)executeTask {
  [self sendWithByteArray:ComJhonjuPs3netsrvServerUtilsUtils_longToBytesBEWithLong_(ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_calculateFileSizeWithJavaIoFile_([self getFile]))];
}

+ (jlong)calculateFileSizeWithJavaIoFile:(JavaIoFile *)file {
  return ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_calculateFileSizeWithJavaIoFile_(file);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "J", 0xa, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComJhonjuPs3netsrvServerContext:withShort:);
  methods[1].selector = @selector(executeTask);
  methods[2].selector = @selector(calculateFileSizeWithJavaIoFile:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComJhonjuPs3netsrvServerContext;S", "LJavaIoIOException;LComJhonjuPs3netsrvServerExceptionsPS3NetSrvException;", "calculateFileSize", "LJavaIoFile;" };
  static const J2ObjcClassInfo _ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand = { "GetDirSizeCommand", "com.jhonju.ps3netsrv.server.commands", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand;
}

@end

void ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand *self, ComJhonjuPs3netsrvServerContext *ctx, jshort filePathLength) {
  ComJhonjuPs3netsrvServerCommandsFileCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(self, ctx, filePathLength);
  JreStrongAssign(&self->ERROR_CODE_BYTEARRAY_, ComJhonjuPs3netsrvServerUtilsUtils_longToBytesBEWithLong_(ComJhonjuPs3netsrvServerCommandsAbstractCommand_ERROR_CODE));
}

ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand *new_ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ComJhonjuPs3netsrvServerContext *ctx, jshort filePathLength) {
  J2OBJC_NEW_IMPL(ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand, initWithComJhonjuPs3netsrvServerContext_withShort_, ctx, filePathLength)
}

ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand *create_ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ComJhonjuPs3netsrvServerContext *ctx, jshort filePathLength) {
  J2OBJC_CREATE_IMPL(ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand, initWithComJhonjuPs3netsrvServerContext_withShort_, ctx, filePathLength)
}

jlong ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_calculateFileSizeWithJavaIoFile_(JavaIoFile *file) {
  ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_initialize();
  jlong fileSize = ComJhonjuPs3netsrvServerCommandsAbstractCommand_EMPTY_SIZE;
  if ([((JavaIoFile *) nil_chk(file)) isDirectory]) {
    IOSObjectArray *files = [file listFiles];
    if (files != nil) {
      {
        IOSObjectArray *a__ = files;
        JavaIoFile * const *b__ = a__->buffer_;
        JavaIoFile * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          JavaIoFile *subFile = *b__++;
          fileSize += ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand_calculateFileSizeWithJavaIoFile_(subFile);
        }
      }
    }
  }
  else {
    fileSize = [file length];
  }
  return fileSize;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComJhonjuPs3netsrvServerCommandsGetDirSizeCommand)
