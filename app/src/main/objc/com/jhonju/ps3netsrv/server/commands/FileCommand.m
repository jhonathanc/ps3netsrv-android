//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./app/src/main/java/com/jhonju/ps3netsrv/server/commands/FileCommand.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/jhonju/ps3netsrv/server/Context.h"
#include "com/jhonju/ps3netsrv/server/commands/AbstractCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/FileCommand.h"
#include "com/jhonju/ps3netsrv/server/exceptions/PS3NetSrvException.h"
#include "com/jhonju/ps3netsrv/server/utils/Utils.h"
#include "java/io/File.h"
#include "java/io/InputStream.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/charset/Charset.h"
#include "java/nio/charset/StandardCharsets.h"

#if __has_feature(objc_arc)
#error "com/jhonju/ps3netsrv/server/commands/FileCommand must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation ComJhonjuPs3netsrvServerCommandsFileCommand

- (instancetype)initWithComJhonjuPs3netsrvServerContext:(ComJhonjuPs3netsrvServerContext *)ctx
                                              withShort:(jshort)filePathLength {
  ComJhonjuPs3netsrvServerCommandsFileCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(self, ctx, filePathLength);
  return self;
}

- (JavaIoFile *)getFile {
  JavaNioByteBuffer *buffer = ComJhonjuPs3netsrvServerUtilsUtils_readCommandDataWithJavaIoInputStream_withInt_([((ComJhonjuPs3netsrvServerContext *) nil_chk(ctx_)) getInputStream], self->filePathLength_);
  if (buffer == nil) {
    [self sendWithByteArray:ERROR_CODE_BYTEARRAY_];
    @throw create_ComJhonjuPs3netsrvServerExceptionsPS3NetSrvException_initWithNSString_(@"ERROR: command failed receiving filename.");
  }
  return create_JavaIoFile_initWithNSString_withNSString_([((ComJhonjuPs3netsrvServerContext *) nil_chk(ctx_)) getRootDirectory], [[NSString java_stringWithBytes:[buffer array] charset:JreLoadStatic(JavaNioCharsetStandardCharsets, UTF_8)] java_replaceAll:@"\\x00+$" withReplacement:@""]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoFile;", 0x4, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComJhonjuPs3netsrvServerContext:withShort:);
  methods[1].selector = @selector(getFile);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "filePathLength_", "S", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComJhonjuPs3netsrvServerContext;S", "LJavaIoIOException;LComJhonjuPs3netsrvServerExceptionsPS3NetSrvException;" };
  static const J2ObjcClassInfo _ComJhonjuPs3netsrvServerCommandsFileCommand = { "FileCommand", "com.jhonju.ps3netsrv.server.commands", ptrTable, methods, fields, 7, 0x401, 2, 1, -1, -1, -1, -1, -1 };
  return &_ComJhonjuPs3netsrvServerCommandsFileCommand;
}

@end

void ComJhonjuPs3netsrvServerCommandsFileCommand_initWithComJhonjuPs3netsrvServerContext_withShort_(ComJhonjuPs3netsrvServerCommandsFileCommand *self, ComJhonjuPs3netsrvServerContext *ctx, jshort filePathLength) {
  ComJhonjuPs3netsrvServerCommandsAbstractCommand_initWithComJhonjuPs3netsrvServerContext_(self, ctx);
  self->filePathLength_ = filePathLength;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComJhonjuPs3netsrvServerCommandsFileCommand)
