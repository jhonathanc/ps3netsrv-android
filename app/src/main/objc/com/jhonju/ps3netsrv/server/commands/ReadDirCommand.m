//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./app/src/main/java/com/jhonju/ps3netsrv/server/commands/ReadDirCommand.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/jhonju/ps3netsrv/server/Context.h"
#include "com/jhonju/ps3netsrv/server/commands/AbstractCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/IResult.h"
#include "com/jhonju/ps3netsrv/server/commands/ReadDirCommand.h"
#include "com/jhonju/ps3netsrv/server/utils/Utils.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/File.h"
#include "java/lang/Math.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#if __has_feature(objc_arc)
#error "com/jhonju/ps3netsrv/server/commands/ReadDirCommand must not be compiled with ARC (-fobjc-arc)"
#endif

inline jlong ComJhonjuPs3netsrvServerCommandsReadDirCommand_get_MAX_ENTRIES(void);
#define ComJhonjuPs3netsrvServerCommandsReadDirCommand_MAX_ENTRIES 4096LL
J2OBJC_STATIC_FIELD_CONSTANT(ComJhonjuPs3netsrvServerCommandsReadDirCommand, MAX_ENTRIES, jlong)

inline jshort ComJhonjuPs3netsrvServerCommandsReadDirCommand_get_MAX_FILE_NAME_LENGTH(void);
#define ComJhonjuPs3netsrvServerCommandsReadDirCommand_MAX_FILE_NAME_LENGTH 512
J2OBJC_STATIC_FIELD_CONSTANT(ComJhonjuPs3netsrvServerCommandsReadDirCommand, MAX_FILE_NAME_LENGTH, jshort)

inline jint ComJhonjuPs3netsrvServerCommandsReadDirCommand_get_READ_DIR_ENTRY_LENGTH(void);
#define ComJhonjuPs3netsrvServerCommandsReadDirCommand_READ_DIR_ENTRY_LENGTH 529
J2OBJC_STATIC_FIELD_CONSTANT(ComJhonjuPs3netsrvServerCommandsReadDirCommand, READ_DIR_ENTRY_LENGTH, jint)

@interface ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult : NSObject < ComJhonjuPs3netsrvServerCommandsIResult > {
 @public
  id<JavaUtilList> entries_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)entries;

- (IOSByteArray *)toByteArray;

@end

J2OBJC_EMPTY_STATIC_INIT(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult)

J2OBJC_FIELD_SETTER(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult, entries_, id<JavaUtilList>)

__attribute__((unused)) static void ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult_initWithJavaUtilList_(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult *self, id<JavaUtilList> entries);

__attribute__((unused)) static ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult *new_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult_initWithJavaUtilList_(id<JavaUtilList> entries) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult *create_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult_initWithJavaUtilList_(id<JavaUtilList> entries);

J2OBJC_TYPE_LITERAL_HEADER(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult)

@interface ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry : NSObject {
 @public
  jlong aFileSize_;
  jlong bModifiedTime_;
  jboolean cIsDirectory_;
  IOSCharArray *dName_;
}

- (instancetype)initWithLong:(jlong)fileSize
                    withLong:(jlong)modifiedTime
                 withBoolean:(jboolean)isDirectory
                withNSString:(NSString *)name;

- (IOSByteArray *)toByteArray;

@end

J2OBJC_EMPTY_STATIC_INIT(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry)

J2OBJC_FIELD_SETTER(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry, dName_, IOSCharArray *)

__attribute__((unused)) static void ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry_initWithLong_withLong_withBoolean_withNSString_(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry *self, jlong fileSize, jlong modifiedTime, jboolean isDirectory, NSString *name);

__attribute__((unused)) static ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry *new_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry_initWithLong_withLong_withBoolean_withNSString_(jlong fileSize, jlong modifiedTime, jboolean isDirectory, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry *create_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry_initWithLong_withLong_withBoolean_withNSString_(jlong fileSize, jlong modifiedTime, jboolean isDirectory, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry)

@implementation ComJhonjuPs3netsrvServerCommandsReadDirCommand

- (instancetype)initWithComJhonjuPs3netsrvServerContext:(ComJhonjuPs3netsrvServerContext *)ctx {
  ComJhonjuPs3netsrvServerCommandsReadDirCommand_initWithComJhonjuPs3netsrvServerContext_(self, ctx);
  return self;
}

- (void)executeTask {
  JavaIoFile *file = JreRetainedLocalValue([((ComJhonjuPs3netsrvServerContext *) nil_chk(ctx_)) getFile]);
  if (file == nil || !([file exists] && [file isDirectory])) {
    [self sendWithByteArray:ComJhonjuPs3netsrvServerUtilsUtils_longToBytesBEWithLong_(ComJhonjuPs3netsrvServerCommandsAbstractCommand_EMPTY_SIZE)];
  }
  else {
    id<JavaUtilList> entries = create_JavaUtilArrayList_init();
    IOSObjectArray *files = [file listFiles];
    if (files != nil) {
      {
        IOSObjectArray *a__ = files;
        JavaIoFile * const *b__ = a__->buffer_;
        JavaIoFile * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          JavaIoFile *f = *b__++;
          if ([entries size] == ComJhonjuPs3netsrvServerCommandsReadDirCommand_MAX_ENTRIES) break;
          [entries addWithId:create_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry_initWithLong_withLong_withBoolean_withNSString_([((JavaIoFile *) nil_chk(f)) isDirectory] ? ComJhonjuPs3netsrvServerCommandsAbstractCommand_EMPTY_SIZE : [f length], JreLongDiv([f lastModified], ComJhonjuPs3netsrvServerCommandsAbstractCommand_MILLISECONDS_IN_SECOND), [f isDirectory], [f getName])];
        }
      }
    }
    [self sendWithComJhonjuPs3netsrvServerCommandsIResult:create_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult_initWithJavaUtilList_(entries)];
  }
  [((ComJhonjuPs3netsrvServerContext *) nil_chk(ctx_)) setFileWithJavaIoFile:nil];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComJhonjuPs3netsrvServerContext:);
  methods[1].selector = @selector(executeTask);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_ENTRIES", "J", .constantValue.asLong = ComJhonjuPs3netsrvServerCommandsReadDirCommand_MAX_ENTRIES, 0x1a, -1, -1, -1, -1 },
    { "MAX_FILE_NAME_LENGTH", "S", .constantValue.asShort = ComJhonjuPs3netsrvServerCommandsReadDirCommand_MAX_FILE_NAME_LENGTH, 0x1a, -1, -1, -1, -1 },
    { "READ_DIR_ENTRY_LENGTH", "I", .constantValue.asInt = ComJhonjuPs3netsrvServerCommandsReadDirCommand_READ_DIR_ENTRY_LENGTH, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComJhonjuPs3netsrvServerContext;", "LJavaIoIOException;LComJhonjuPs3netsrvServerExceptionsPS3NetSrvException;", "LComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult;LComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry;" };
  static const J2ObjcClassInfo _ComJhonjuPs3netsrvServerCommandsReadDirCommand = { "ReadDirCommand", "com.jhonju.ps3netsrv.server.commands", ptrTable, methods, fields, 7, 0x1, 2, 3, -1, 2, -1, -1, -1 };
  return &_ComJhonjuPs3netsrvServerCommandsReadDirCommand;
}

@end

void ComJhonjuPs3netsrvServerCommandsReadDirCommand_initWithComJhonjuPs3netsrvServerContext_(ComJhonjuPs3netsrvServerCommandsReadDirCommand *self, ComJhonjuPs3netsrvServerContext *ctx) {
  ComJhonjuPs3netsrvServerCommandsAbstractCommand_initWithComJhonjuPs3netsrvServerContext_(self, ctx);
}

ComJhonjuPs3netsrvServerCommandsReadDirCommand *new_ComJhonjuPs3netsrvServerCommandsReadDirCommand_initWithComJhonjuPs3netsrvServerContext_(ComJhonjuPs3netsrvServerContext *ctx) {
  J2OBJC_NEW_IMPL(ComJhonjuPs3netsrvServerCommandsReadDirCommand, initWithComJhonjuPs3netsrvServerContext_, ctx)
}

ComJhonjuPs3netsrvServerCommandsReadDirCommand *create_ComJhonjuPs3netsrvServerCommandsReadDirCommand_initWithComJhonjuPs3netsrvServerContext_(ComJhonjuPs3netsrvServerContext *ctx) {
  J2OBJC_CREATE_IMPL(ComJhonjuPs3netsrvServerCommandsReadDirCommand, initWithComJhonjuPs3netsrvServerContext_, ctx)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComJhonjuPs3netsrvServerCommandsReadDirCommand)

@implementation ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)entries {
  ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult_initWithJavaUtilList_(self, entries);
  return self;
}

- (IOSByteArray *)toByteArray {
  if (entries_ != nil) {
    JavaIoByteArrayOutputStream *out = create_JavaIoByteArrayOutputStream_initWithInt_([entries_ size] * ComJhonjuPs3netsrvServerCommandsReadDirCommand_READ_DIR_ENTRY_LENGTH + ComJhonjuPs3netsrvServerUtilsUtils_LONG_CAPACITY);
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      [out writeWithByteArray:ComJhonjuPs3netsrvServerUtilsUtils_longToBytesBEWithLong_([entries_ size])];
      for (ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry * __strong entry_ in entries_) {
        [out writeWithByteArray:[((ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry *) nil_chk(entry_)) toByteArray]];
      }
      return [out toByteArray];
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (out != nil) {
        if (__primaryException1 != nil) {
          @try {
            [out close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [out close];
        }
      }
    }
  }
  return nil;
}

- (void)dealloc {
  RELEASE_(entries_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(toByteArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "entries_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<Lcom/jhonju/ps3netsrv/server/commands/ReadDirCommand$ReadDirEntry;>;)V", "LJavaIoIOException;", "Ljava/util/List<Lcom/jhonju/ps3netsrv/server/commands/ReadDirCommand$ReadDirEntry;>;", "LComJhonjuPs3netsrvServerCommandsReadDirCommand;" };
  static const J2ObjcClassInfo _ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult = { "ReadDirResult", "com.jhonju.ps3netsrv.server.commands", ptrTable, methods, fields, 7, 0xa, 2, 1, 4, -1, -1, -1, -1 };
  return &_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult;
}

@end

void ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult_initWithJavaUtilList_(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult *self, id<JavaUtilList> entries) {
  NSObject_init(self);
  JreStrongAssign(&self->entries_, entries);
}

ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult *new_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult_initWithJavaUtilList_(id<JavaUtilList> entries) {
  J2OBJC_NEW_IMPL(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult, initWithJavaUtilList_, entries)
}

ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult *create_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult_initWithJavaUtilList_(id<JavaUtilList> entries) {
  J2OBJC_CREATE_IMPL(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult, initWithJavaUtilList_, entries)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirResult)

@implementation ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry

- (instancetype)initWithLong:(jlong)fileSize
                    withLong:(jlong)modifiedTime
                 withBoolean:(jboolean)isDirectory
                withNSString:(NSString *)name {
  ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry_initWithLong_withLong_withBoolean_withNSString_(self, fileSize, modifiedTime, isDirectory, name);
  return self;
}

- (IOSByteArray *)toByteArray {
  JavaIoByteArrayOutputStream *out = create_JavaIoByteArrayOutputStream_initWithInt_(ComJhonjuPs3netsrvServerCommandsReadDirCommand_READ_DIR_ENTRY_LENGTH);
  JavaLangThrowable *__primaryException1 = nil;
  @try {
    [out writeWithByteArray:ComJhonjuPs3netsrvServerUtilsUtils_longToBytesBEWithLong_(self->aFileSize_)];
    [out writeWithByteArray:ComJhonjuPs3netsrvServerUtilsUtils_longToBytesBEWithLong_(self->bModifiedTime_)];
    [out writeWithInt:cIsDirectory_ ? 1 : 0];
    [out writeWithByteArray:ComJhonjuPs3netsrvServerUtilsUtils_charArrayToByteArrayWithCharArray_(dName_)];
    return [out toByteArray];
  }
  @catch (JavaLangThrowable *e) {
    __primaryException1 = e;
    @throw e;
  }
  @finally {
    if (out != nil) {
      if (__primaryException1 != nil) {
        @try {
          [out close];
        }
        @catch (JavaLangThrowable *e) {
          [__primaryException1 addSuppressedWithJavaLangThrowable:e];
        }
      }
      else {
        [out close];
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(dName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLong:withLong:withBoolean:withNSString:);
  methods[1].selector = @selector(toByteArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "aFileSize_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bModifiedTime_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cIsDirectory_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "dName_", "[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JJZLNSString;", "LJavaIoIOException;", "LComJhonjuPs3netsrvServerCommandsReadDirCommand;" };
  static const J2ObjcClassInfo _ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry = { "ReadDirEntry", "com.jhonju.ps3netsrv.server.commands", ptrTable, methods, fields, 7, 0xa, 2, 4, 2, -1, -1, -1, -1 };
  return &_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry;
}

@end

void ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry_initWithLong_withLong_withBoolean_withNSString_(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry *self, jlong fileSize, jlong modifiedTime, jboolean isDirectory, NSString *name) {
  NSObject_init(self);
  self->aFileSize_ = fileSize;
  self->bModifiedTime_ = modifiedTime;
  self->cIsDirectory_ = isDirectory;
  jint length = JavaLangMath_minWithInt_withInt_([((NSString *) nil_chk(name)) java_length], ComJhonjuPs3netsrvServerCommandsReadDirCommand_MAX_FILE_NAME_LENGTH);
  JreStrongAssignAndConsume(&self->dName_, [IOSCharArray newArrayWithLength:ComJhonjuPs3netsrvServerCommandsReadDirCommand_MAX_FILE_NAME_LENGTH]);
  for (jint i = 0; i < length; i++) {
    *IOSCharArray_GetRef(self->dName_, i) = [name charAtWithInt:i];
  }
}

ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry *new_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry_initWithLong_withLong_withBoolean_withNSString_(jlong fileSize, jlong modifiedTime, jboolean isDirectory, NSString *name) {
  J2OBJC_NEW_IMPL(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry, initWithLong_withLong_withBoolean_withNSString_, fileSize, modifiedTime, isDirectory, name)
}

ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry *create_ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry_initWithLong_withLong_withBoolean_withNSString_(jlong fileSize, jlong modifiedTime, jboolean isDirectory, NSString *name) {
  J2OBJC_CREATE_IMPL(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry, initWithLong_withLong_withBoolean_withNSString_, fileSize, modifiedTime, isDirectory, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComJhonjuPs3netsrvServerCommandsReadDirCommand_ReadDirEntry)
