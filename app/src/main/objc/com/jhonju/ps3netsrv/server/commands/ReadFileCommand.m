//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./app/src/main/java/com/jhonju/ps3netsrv/server/commands/ReadFileCommand.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/jhonju/ps3netsrv/server/Context.h"
#include "com/jhonju/ps3netsrv/server/commands/AbstractCommand.h"
#include "com/jhonju/ps3netsrv/server/commands/IResult.h"
#include "com/jhonju/ps3netsrv/server/commands/ReadFileCommand.h"
#include "com/jhonju/ps3netsrv/server/exceptions/PS3NetSrvException.h"
#include "com/jhonju/ps3netsrv/server/utils/Utils.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/RandomAccessFile.h"
#include "java/lang/Throwable.h"

#if __has_feature(objc_arc)
#error "com/jhonju/ps3netsrv/server/commands/ReadFileCommand must not be compiled with ARC (-fobjc-arc)"
#endif

@interface ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult : NSObject < ComJhonjuPs3netsrvServerCommandsIResult > {
 @public
  jint bytesReadLength_;
  IOSByteArray *bytesRead_;
}

- (instancetype)initWithInt:(jint)bytesReadLength
              withByteArray:(IOSByteArray *)bytesRead;

- (IOSByteArray *)toByteArray;

@end

J2OBJC_EMPTY_STATIC_INIT(ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult)

J2OBJC_FIELD_SETTER(ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult, bytesRead_, IOSByteArray *)

__attribute__((unused)) static void ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult_initWithInt_withByteArray_(ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult *self, jint bytesReadLength, IOSByteArray *bytesRead);

__attribute__((unused)) static ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult *new_ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult_initWithInt_withByteArray_(jint bytesReadLength, IOSByteArray *bytesRead) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult *create_ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult_initWithInt_withByteArray_(jint bytesReadLength, IOSByteArray *bytesRead);

J2OBJC_TYPE_LITERAL_HEADER(ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult)

@implementation ComJhonjuPs3netsrvServerCommandsReadFileCommand

- (instancetype)initWithComJhonjuPs3netsrvServerContext:(ComJhonjuPs3netsrvServerContext *)ctx
                                                withInt:(jint)numBytes
                                               withLong:(jlong)offset {
  ComJhonjuPs3netsrvServerCommandsReadFileCommand_initWithComJhonjuPs3netsrvServerContext_withInt_withLong_(self, ctx, numBytes, offset);
  return self;
}

- (void)executeTask {
  IOSByteArray *readFileResult = [IOSByteArray arrayWithLength:numBytes_];
  JavaIoRandomAccessFile *file = JreRetainedLocalValue([((ComJhonjuPs3netsrvServerContext *) nil_chk(ctx_)) getReadOnlyFile]);
  @try {
    [((JavaIoRandomAccessFile *) nil_chk(file)) seekWithLong:offset_];
    jint bytesRead = [file readWithByteArray:readFileResult];
    if (bytesRead < ComJhonjuPs3netsrvServerCommandsAbstractCommand_EMPTY_SIZE) {
      @throw create_ComJhonjuPs3netsrvServerExceptionsPS3NetSrvException_initWithNSString_(@"Error reading file: EOF.");
    }
    [self sendWithComJhonjuPs3netsrvServerCommandsIResult:create_ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult_initWithInt_withByteArray_(bytesRead, readFileResult)];
  }
  @catch (JavaIoIOException *e) {
    [self sendWithByteArray:ERROR_CODE_BYTEARRAY_];
    @throw create_ComJhonjuPs3netsrvServerExceptionsPS3NetSrvException_initWithNSString_(@"Error reading file.");
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComJhonjuPs3netsrvServerContext:withInt:withLong:);
  methods[1].selector = @selector(executeTask);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "numBytes_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "offset_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComJhonjuPs3netsrvServerContext;IJ", "LJavaIoIOException;LComJhonjuPs3netsrvServerExceptionsPS3NetSrvException;", "LComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult;" };
  static const J2ObjcClassInfo _ComJhonjuPs3netsrvServerCommandsReadFileCommand = { "ReadFileCommand", "com.jhonju.ps3netsrv.server.commands", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, 2, -1, -1, -1 };
  return &_ComJhonjuPs3netsrvServerCommandsReadFileCommand;
}

@end

void ComJhonjuPs3netsrvServerCommandsReadFileCommand_initWithComJhonjuPs3netsrvServerContext_withInt_withLong_(ComJhonjuPs3netsrvServerCommandsReadFileCommand *self, ComJhonjuPs3netsrvServerContext *ctx, jint numBytes, jlong offset) {
  ComJhonjuPs3netsrvServerCommandsAbstractCommand_initWithComJhonjuPs3netsrvServerContext_(self, ctx);
  self->numBytes_ = numBytes;
  self->offset_ = offset;
}

ComJhonjuPs3netsrvServerCommandsReadFileCommand *new_ComJhonjuPs3netsrvServerCommandsReadFileCommand_initWithComJhonjuPs3netsrvServerContext_withInt_withLong_(ComJhonjuPs3netsrvServerContext *ctx, jint numBytes, jlong offset) {
  J2OBJC_NEW_IMPL(ComJhonjuPs3netsrvServerCommandsReadFileCommand, initWithComJhonjuPs3netsrvServerContext_withInt_withLong_, ctx, numBytes, offset)
}

ComJhonjuPs3netsrvServerCommandsReadFileCommand *create_ComJhonjuPs3netsrvServerCommandsReadFileCommand_initWithComJhonjuPs3netsrvServerContext_withInt_withLong_(ComJhonjuPs3netsrvServerContext *ctx, jint numBytes, jlong offset) {
  J2OBJC_CREATE_IMPL(ComJhonjuPs3netsrvServerCommandsReadFileCommand, initWithComJhonjuPs3netsrvServerContext_withInt_withLong_, ctx, numBytes, offset)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComJhonjuPs3netsrvServerCommandsReadFileCommand)

@implementation ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult

- (instancetype)initWithInt:(jint)bytesReadLength
              withByteArray:(IOSByteArray *)bytesRead {
  ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult_initWithInt_withByteArray_(self, bytesReadLength, bytesRead);
  return self;
}

- (IOSByteArray *)toByteArray {
  JavaIoByteArrayOutputStream *out = create_JavaIoByteArrayOutputStream_initWithInt_(ComJhonjuPs3netsrvServerUtilsUtils_INT_CAPACITY + bytesReadLength_);
  JavaLangThrowable *__primaryException1 = nil;
  @try {
    [out writeWithByteArray:ComJhonjuPs3netsrvServerUtilsUtils_intToBytesBEWithInt_(bytesReadLength_)];
    [out writeWithByteArray:bytesRead_];
    return [out toByteArray];
  }
  @catch (JavaLangThrowable *e) {
    __primaryException1 = e;
    @throw e;
  }
  @finally {
    if (out != nil) {
      if (__primaryException1 != nil) {
        @try {
          [out close];
        }
        @catch (JavaLangThrowable *e) {
          [__primaryException1 addSuppressedWithJavaLangThrowable:e];
        }
      }
      else {
        [out close];
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(bytesRead_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withByteArray:);
  methods[1].selector = @selector(toByteArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bytesReadLength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bytesRead_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I[B", "LJavaIoIOException;", "LComJhonjuPs3netsrvServerCommandsReadFileCommand;" };
  static const J2ObjcClassInfo _ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult = { "ReadFileResult", "com.jhonju.ps3netsrv.server.commands", ptrTable, methods, fields, 7, 0xa, 2, 2, 2, -1, -1, -1, -1 };
  return &_ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult;
}

@end

void ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult_initWithInt_withByteArray_(ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult *self, jint bytesReadLength, IOSByteArray *bytesRead) {
  NSObject_init(self);
  self->bytesReadLength_ = bytesReadLength;
  JreStrongAssign(&self->bytesRead_, bytesRead);
}

ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult *new_ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult_initWithInt_withByteArray_(jint bytesReadLength, IOSByteArray *bytesRead) {
  J2OBJC_NEW_IMPL(ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult, initWithInt_withByteArray_, bytesReadLength, bytesRead)
}

ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult *create_ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult_initWithInt_withByteArray_(jint bytesReadLength, IOSByteArray *bytesRead) {
  J2OBJC_CREATE_IMPL(ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult, initWithInt_withByteArray_, bytesReadLength, bytesRead)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComJhonjuPs3netsrvServerCommandsReadFileCommand_ReadFileResult)
